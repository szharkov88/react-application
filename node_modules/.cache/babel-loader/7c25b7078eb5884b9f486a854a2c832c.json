{"ast":null,"code":"var _jsxFileName = \"/Users/sergeymac/Web/React application /react-quiz(redux)/src/containers/Quiz/Quiz.js\";\nimport React, { Component } from 'react';\nimport classes from './Quiz.module.scss';\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz';\nimport axios from '../../axios/axios-quiz';\nimport Loader from '../../components/UI/Loader/Loader';\n\nclass Quiz extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      results: {},\n      isFinished: false,\n      activeQuestion: 0,\n      answerState: null,\n      quiz: [// {\n        // \tquestion: 'Какого цвета небо?',\n        // \trightAnswerId: 2,\n        // \tid: 1,\n        // \tanswers: [\n        // \t {text: 'Черный', id: 1},\n        // \t {text: 'Синий', id: 2},\n        // \t {text: 'Красный', id: 3},\n        // \t {text: 'Зеленый', id: 4}\n        // \t]\n        // },\n        // {\n        // \tquestion: 'В каком году основали Санкт-Петербург?',\n        // \trightAnswerId: 3,\n        // \tid: 2,\n        // \tanswers: [\n        // \t {text: '1700', id: 1},\n        // \t {text: '1702', id: 2},\n        // \t {text: '1703', id: 3},\n        // \t {text: '1803', id: 4}\n        // \t]\n        // }  \n      ],\n      loading: true\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0];\n\n        if (this.state.answerState[key] === 'sucsess') {\n          return;\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion];\n      const results = this.state.results;\n\n      if (question.rightAnswerId === answerId) {\n        if (!results[question.id]) {\n          results[question.id] = 'sucsess';\n        }\n\n        this.setState({\n          answerState: {\n            [answerId]: 'sucsess'\n          },\n          results\n        });\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            this.setState({\n              isFinished: true\n            });\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {\n        results[question.id] = 'error';\n        this.setState({\n          answerState: {\n            [answerId]: 'error'\n          },\n          results\n        });\n      }\n    };\n\n    this.retryHandler = () => {\n      this.setState({\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: false,\n        results: {}\n      });\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await axios.get(`/quizes/${this.props.match.params.id}.json`);\n      const quiz = response.data;\n      this.setState({\n        quiz,\n        loading: false\n      });\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log('Quiz ID = ', this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Quiz,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.QuizWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 6\n      }\n    }, \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"), this.state.loading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }) : this.state.isFinished ? /*#__PURE__*/React.createElement(FinishedQuiz, {\n      results: this.state.results,\n      quiz: this.state.quiz,\n      onRetry: this.retryHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(ActiveQuiz, {\n      answers: this.state.quiz[this.state.activeQuestion].answers,\n      question: this.state.quiz[this.state.activeQuestion].question,\n      onAnswerClick: this.onAnswerClickHandler,\n      quizLength: this.state.quiz.length,\n      answerNumber: this.state.activeQuestion + 1,\n      state: this.state.answerState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/sergeymac/Web/React application /react-quiz(redux)/src/containers/Quiz/Quiz.js"],"names":["React","Component","classes","ActiveQuiz","FinishedQuiz","axios","Loader","Quiz","state","results","isFinished","activeQuestion","answerState","quiz","loading","onAnswerClickHandler","answerId","key","Object","keys","question","rightAnswerId","id","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","length","componentDidMount","response","get","props","match","params","data","e","console","log","render","QuizWrapper","answers"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './Quiz.module.scss'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport axios from '../../axios/axios-quiz'\nimport Loader from '../../components/UI/Loader/Loader'\n\n\nclass Quiz extends Component {\n\tstate = {\n\t\tresults: {},\n\t\tisFinished: false,\n\t\tactiveQuestion: 0,\n\t\tanswerState: null,\n\t\tquiz: [\n\t\t  // {\n\t\t  // \tquestion: 'Какого цвета небо?',\n\t\t  // \trightAnswerId: 2,\n\t\t  // \tid: 1,\n\t\t  // \tanswers: [\n\t\t  // \t {text: 'Черный', id: 1},\n\t\t  // \t {text: 'Синий', id: 2},\n\t\t  // \t {text: 'Красный', id: 3},\n\t\t  // \t {text: 'Зеленый', id: 4}\n\t\t  // \t]\n\t\t  // },\n\t\t  // {\n\t\t  // \tquestion: 'В каком году основали Санкт-Петербург?',\n\t\t  // \trightAnswerId: 3,\n\t\t  // \tid: 2,\n\t\t  // \tanswers: [\n\t\t  // \t {text: '1700', id: 1},\n\t\t  // \t {text: '1702', id: 2},\n\t\t  // \t {text: '1703', id: 3},\n\t\t  // \t {text: '1803', id: 4}\n\t\t  // \t]\n\t\t  // }  \n\t\t],\n\t\tloading: true\n\t}\n\n\tonAnswerClickHandler = (answerId) => {\n\n\t\tif (this.state.answerState) {\n\t\t\t  const key = Object.keys(this.state.answerState)[0]\n\t\t\t  if (this.state.answerState[key] === 'sucsess') {\n\t\t\t  \treturn\n\t\t\t  }\n\t\t}\n\t\t\n\n\t\tconst question = this.state.quiz[this.state.activeQuestion]\n        const results = this.state.results\n\n\t\tif(question.rightAnswerId === answerId) {\n\n\t\t\tif(!results[question.id]) {\n\t\t\t\tresults[question.id] = 'sucsess'\n\t\t\t}\n\n\t\t\tthis.setState({\n\t\t\t\tanswerState: {[answerId]: 'sucsess'},\n\t\t\t\tresults\n\t\t\t})\n\n\t\t\tconst timeout = window.setTimeout(() => {\n\n\t\t\t\tif (this.isQuizFinished()) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisFinished: true\n\t\t\t\t\t})     \n\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tactiveQuestion: this.state.activeQuestion + 1, \n\t\t\t\t\t\tanswerState: null\n\t\t\t\t\t})\n\n\t\t\t\t}\n\n\t\t\t\twindow.clearTimeout(timeout)\n\n\t\t\t}, 1000)\n\n\t\t\t\n\n\t\t} else {\n\t\t\tresults[question.id] = 'error'\n\t\t\tthis.setState({\n\t\t\t\tanswerState: {[answerId]: 'error'},\n\t\t\t\tresults\n\t\t\t})\n\t\t}\n\t}\n\n\tisQuizFinished() {\n\t\treturn this.state.activeQuestion + 1 === this.state.quiz.length\n\t}\n\n    retryHandler = () => {\n    \tthis.setState({\n    \t\tactiveQuestion: 0,\n    \t\tanswerState: null,\n    \t\tisFinished: false,\n    \t\tresults: {}\n    \t})\n    }\n     \n    async componentDidMount() {\n    \ttry {\n    \t  const response =  await axios.get(`/quizes/${this.props.match.params.id}.json`)\n    \t  const quiz = response.data\n\n    \t  this.setState({\n    \t  \tquiz,\n    \t  \tloading: false\n    \t  })\n    \t} catch (e) {\n    \t  console.log(e)\n    \t}\n    \tconsole.log('Quiz ID = ', this.props.match.params.id)\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Quiz}>\n\t\t\t <div className={classes.QuizWrapper}>\n\t\t\t  <h1>Ответьте на все вопросы</h1>\n\t\t\t  {\n\t\t\t  \tthis.state.loading\n\t\t\t  \t? <Loader />\n\t\t\t  \t:   this.state.isFinished\n\t\t\t  \t    ? <FinishedQuiz \n                      results={this.state.results}\n                      quiz={this.state.quiz}\n                      onRetry={this.retryHandler}\n\t\t\t  \t      />\n\t\t\t  \t    : <ActiveQuiz\n\t\t\t          answers={this.state.quiz[this.state.activeQuestion].answers}\n\t\t\t          question={this.state.quiz[this.state.activeQuestion].question}\n\t\t\t          onAnswerClick={this.onAnswerClickHandler}\n\t\t\t          quizLength={this.state.quiz.length}\n\t\t\t          answerNumber={this.state.activeQuestion + 1}\n\t\t\t          state={this.state.answerState}\n\t\t\t          />    \n\t\t\t  }\t\t  \n\t\t\t </div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default Quiz"]},"metadata":{},"sourceType":"module"}