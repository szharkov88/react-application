{"ast":null,"code":"var _jsxFileName = \"/Users/sergeymac/Web/React attachment /react-quiz/src/containers/QuizCreator/QuizCreator.js\";\nimport React, { Component } from 'react';\nimport classes from './QuizCreator.module.scss';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport Select from '../../components/UI/Select/Select';\nimport { createControl, validate, validateForm } from '../../form/formFramework';\nimport Auxilliary from '../../hoc/Auxilliary/Auxilliary';\nimport axios from '../../axios/axios-quiz';\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number}`,\n    errorMessage: 'Значение не может быть пустым',\n    id: number\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Вопрос не может быть пустым'\n    }, {\n      required: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nexport default class QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quiz: [],\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControls()\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.addQuestionHandler = event => {\n      event.preventDefault();\n      const quiz = this.state.quiz.concat();\n      const index = quiz.length + 1;\n      const {\n        question,\n        option1,\n        option2,\n        option3,\n        option4\n      } = this.state.formControls;\n      const questionItem = {\n        question: question.value,\n        id: index,\n        rightAnswerId: this.state.rightAnswerId,\n        answers: [{\n          text: option1.value,\n          id: option1.id\n        }, {\n          text: option1.value,\n          id: option2.id\n        }, {\n          text: option1.value,\n          id: option3.id\n        }, {\n          text: option1.value,\n          id: option4.id\n        }]\n      };\n      quiz.push(questionItem);\n      this.setState({\n        quiz,\n        isFormValid: false,\n        rightAnswerId: 1,\n        formControls: createFormControls()\n      });\n    };\n\n    this.createQuizHandler = async event => {\n      event.preventDefault();\n\n      try {\n        await axios.post('/quizes.json', this.state.quiz);\n        this.setState({\n          quiz: [],\n          isFormValid: false,\n          rightAnswerId: 1,\n          formControls: createFormControls()\n        });\n      } catch (e) {\n        console.log(e);\n      } // axios.post('https://react-quiz-4c50d.firebaseio.com/quizes.json', this.state.quiz)\n      //  .then(response => {\n      //    console.log(response)\n      //  })\n      //  .catch(error => console.log(error))\n\n    };\n\n    this.changeHandler = (value, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n      control.touched = true;\n      control.value = value;\n      control.valid = validate(control.value, control.validation);\n      formControls[controlName] = control;\n      this.setState({\n        formControls,\n        isFormValid: validateForm(formControls)\n      });\n    };\n\n    this.selectChangeHandler = event => {\n      this.setState({\n        rightAnswerId: +event.target.value\n      });\n    };\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/React.createElement(Auxilliary, {\n        key: controlName + index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        label: control.label,\n        value: control.value,\n        valid: control.valid,\n        shouldValidate: !!control.validation,\n        touched: control.touched,\n        errorMessage: control.errorMessage,\n        onChange: event => this.changeHandler(event.target.value, controlName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }), index === 0 ? /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      }) : null);\n    });\n  }\n\n  render() {\n    const select = /*#__PURE__*/React.createElement(Select, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\",\n      value: this.state.rightAnswerId,\n      onChange: this.selectChangeHandler,\n      options: [{\n        text: 1,\n        value: 1\n      }, {\n        text: 2,\n        value: 2\n      }, {\n        text: 3,\n        value: 3\n      }, {\n        text: 4,\n        value: 4\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 18\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.QuizCreator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, this.renderControls(), select, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.addQuestionHandler,\n      disabled: !this.state.isFormValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"sucsess\",\n      onClick: this.createQuizHandler,\n      disabled: this.state.quiz.length === 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, \"\\xA0\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/sergeymac/Web/React attachment /react-quiz/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Button","Input","Select","createControl","validate","validateForm","Auxilliary","axios","createOptionControl","number","label","errorMessage","id","required","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","quiz","isFormValid","rightAnswerId","formControls","submitHandler","event","preventDefault","addQuestionHandler","concat","index","length","questionItem","value","answers","text","push","setState","createQuizHandler","post","e","console","log","changeHandler","controlName","control","touched","valid","validation","selectChangeHandler","target","renderControls","Object","keys","map","render","select"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './QuizCreator.module.scss'\nimport Button from '../../components/UI/Button/Button'\nimport Input from  '../../components/UI/Input/Input'\nimport Select from '../../components/UI/Select/Select'\nimport {createControl, validate, validateForm} from  '../../form/formFramework'\nimport Auxilliary from '../../hoc/Auxilliary/Auxilliary'\nimport axios from '../../axios/axios-quiz'\n\nfunction createOptionControl(number) {\n\treturn createControl({\n\t  label: `Вариант ${number}`,\n\t  errorMessage: 'Значение не может быть пустым',\n\t  id: number\n    }, {required: true})\n}\n\nfunction createFormControls() {\n\treturn { question: createControl({\n\t\t\t\tlabel: 'Введите вопрос',\n\t\t\t\terrorMessage: 'Вопрос не может быть пустым'\n\t\t\t}, {required: true}),\n\t\t\toption1: createOptionControl(1),\n\t\t\toption2: createOptionControl(2),\n\t\t\toption3: createOptionControl(3),\n\t\t\toption4: createOptionControl(4) \n\n\t}\n\n}\n\nexport default class QuizCreator extends Component {\n\n\tstate = {\n\t\tquiz: [],\n\t\tisFormValid: false,\n\t\trightAnswerId: 1,\n\t\tformControls: createFormControls()\n\t}\n\nsubmitHandler = event => {\n\tevent.preventDefault()\n}\n\naddQuestionHandler = event => {\n\tevent.preventDefault()\n\n\tconst quiz = this.state.quiz.concat()\n\tconst index = quiz.length + 1\n\n\tconst {question, option1, option2, option3, option4} = this.state.formControls\n    \n    const questionItem = {\n    \tquestion: question.value,\n    \tid: index,\n    \trightAnswerId: this.state.rightAnswerId,\n    \tanswers: [\n    \t {text: option1.value, id: option1.id},\n    \t {text: option1.value, id: option2.id},\n    \t {text: option1.value, id: option3.id},\n    \t {text: option1.value, id: option4.id}\n    \t]\n\n    }\n    quiz.push(questionItem)\n\n    this.setState({\n    \tquiz,\n    \tisFormValid: false,\n    \trightAnswerId: 1,\n    \tformControls: createFormControls()\n    })\n\n}\n\ncreateQuizHandler = async event => {\n\tevent.preventDefault()\n\n  try {\n    await axios.post('/quizes.json', this.state.quiz)\n    this.setState({\n      quiz: [],\n      isFormValid: false,\n      rightAnswerId: 1,\n      formControls: createFormControls()\n    })\n  } catch (e) {\n    console.log(e)\n  }\n\n\t// axios.post('https://react-quiz-4c50d.firebaseio.com/quizes.json', this.state.quiz)\n //  .then(response => {\n //    console.log(response)\n //  })\n //  .catch(error => console.log(error))\n\n\n\n}\n\nchangeHandler = (value, controlName) => {\n\t const formControls = { ...this.state.formControls }\n     const control = { ...formControls[controlName] }\n\n     control.touched = true\n     control.value = value \n     control.valid = validate(control.value, control.validation)\n\n     formControls[controlName] = control\n\n     this.setState({\n     \tformControls,\n     \tisFormValid: validateForm(formControls)\n     })\n\n}\n\nrenderControls() {\n\treturn Object.keys(this.state.formControls).map((controlName, index) => {\n\t\tconst control = this.state.formControls[controlName]\n\n\t\treturn (\n          <Auxilliary key={controlName + index}>\n            <Input\n            label={control.label}\n            value={control.value}\n            valid={control.valid}\n            shouldValidate={!!control.validation}\n            touched={control.touched}\n            errorMessage={control.errorMessage}\n            onChange={event => this.changeHandler(event.target.value, controlName)}\n            />\n            { index === 0 ? <hr /> : null }\n          </Auxilliary>\n\t\t)\n\n\t})\n}\n\nselectChangeHandler = event => {\n\tthis.setState({\n\t\trightAnswerId: +event.target.value\n\t})\n}\n\n\trender() { \n\n\t\tconst select = <Select\n\t\tlabel=\"Выберете правильный ответ\"\n\t\tvalue={this.state.rightAnswerId}\n\t\tonChange={this.selectChangeHandler}\n\t\toptions={[\n\t\t\t{text: 1, value: 1},\n\t\t\t{text: 2, value: 2},\n\t\t\t{text: 3, value: 3},\n\t\t\t{text: 4, value: 4},\n\t\t]}\n\n\t\t/>\n\t\treturn (\n\t\t\t<div className={classes.QuizCreator}>\n\t\t\t  <div>\n                <h1>Создание теста</h1>\n                <form onSubmit={this.submitHandler}>\n                  \n                  { this.renderControls() }\n\n                  { select }\n\n                  <Button\n                    type=\"primary\"\n                    onClick={this.addQuestionHandler}\n                    disabled={!this.state.isFormValid}\n                  >\n                    Добавить вопрос\n                  </Button>\n\n                  <Button\n                    type=\"sucsess\"\n                    onClick={this.createQuizHandler}\n                    disabled={this.state.quiz.length === 0}\n                  >\n                     Создать тест\n                  </Button>\n\n\n                </form>\n\n\t\t\t  </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}