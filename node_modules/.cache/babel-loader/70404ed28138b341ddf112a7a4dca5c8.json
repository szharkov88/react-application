{"ast":null,"code":"export function createControl(config, validation) {\n  return { ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  };\n}\nexport function validate(value, validation = null) {\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOwnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid;\n    }\n  }\n\n  return isFormValid;\n}","map":{"version":3,"sources":["/Users/sergeymac/Web/React application /react-quiz/src/form/formFramework.js"],"names":["createControl","config","validation","valid","touched","value","validate","isValid","required","trim","validateForm","formControls","isFormValid","control","hasOwnProperty"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,UAA/B,EAA2C;AACjD,SAAO,EACN,GAAGD,MADG;AAENC,IAAAA,UAFM;AAGNC,IAAAA,KAAK,EAAE,CAACD,UAHF;AAINE,IAAAA,OAAO,EAAE,KAJH;AAKNC,IAAAA,KAAK,EAAE;AALD,GAAP;AAOA;AAED,OAAO,SAASC,QAAT,CAAkBD,KAAlB,EAAyBH,UAAU,GAAG,IAAtC,EAA4C;AAClD,MAAI,CAACA,UAAL,EAAiB;AAChB,WAAO,IAAP;AACA;;AAED,MAAIK,OAAO,GAAG,IAAd;;AAEA,MAAIL,UAAU,CAACM,QAAf,EAAyB;AACtBD,IAAAA,OAAO,GAAGF,KAAK,CAACI,IAAN,OAAiB,EAAjB,IAAuBF,OAAjC;AACF;;AAED,SAAOA,OAAP;AACA;AAGD,OAAO,SAASG,YAAT,CAAsBC,YAAtB,EAAoC;AAC1C,MAAIC,WAAW,GAAG,IAAlB;;AAEA,OAAK,IAAIC,OAAT,IAAoBF,YAApB,EAAkC;AACjC,QAAIA,YAAY,CAACG,cAAb,CAA4BD,OAA5B,CAAJ,EAA0C;AACzCD,MAAAA,WAAW,GAAGD,YAAY,CAACE,OAAD,CAAZ,CAAsBV,KAAtB,IAA+BS,WAA7C;AACA;AACD;;AAED,SAAOA,WAAP;AAEA","sourcesContent":["export function createControl(config, validation) {\n\treturn {\n\t\t...config,\n\t\tvalidation,\n\t\tvalid: !validation,\n\t\ttouched: false,\n\t\tvalue: ''\n\t}\n}\n\nexport function validate(value, validation = null) {\n\tif (!validation) {\n\t\treturn true \n\t}\n\n\tlet isValid = true\n\n\tif (validation.required) {\n\t   isValid = value.trim() !== '' && isValid\n\t}\n\n\treturn isValid\n}\n\n\nexport function validateForm(formControls) {\n\tlet isFormValid = true\n\n\tfor (let control in formControls) {\n\t\tif (formControls.hasOwnProperty(control)) {\n\t\t\tisFormValid = formControls[control].valid && isFormValid\n\t\t}\n\t}\n\n\treturn isFormValid\n\n}"]},"metadata":{},"sourceType":"module"}