{"ast":null,"code":"import _regeneratorRuntime from\"/Users/sergeymac/Web/React application /react-quiz(redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sergeymac/Web/React application /react-quiz(redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{AUTH_SUCCESS,AUTH_LOGOUT}from'./actionTypes';export function auth(email,password,isLogin){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var authData,url,response,data,expirationDate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:authData={email:email,password:password,returnSecureToken:true};url='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCbBoRoHs00xHTbFhRuwxba00aAPuNpwQo';if(isLogin){url='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCbBoRoHs00xHTbFhRuwxba00aAPuNpwQo';}_context.next=5;return axios.post(url,authData);case 5:response=_context.sent;data=response.data;expirationDate=new Date(new Date().getTime()+data.expiresIn*1000);localStorage.setItem('token',data.idToken);localStorage.setItem('userId',data.localId);localStorage.setItem('expirationDate',expirationDate);dispatch(authSuccess(data.idToken));dispatch(autoLogout(data.expiresIn));case 13:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();}export function autoLogout(time){return function(dispatch){setTimeout(function(){dispatch(logout());},time*1000);};}export function logout(){localStorage.removeItem('token');localStorage.removeItem('userId');localStorage.removeItem('expirationDate');return{type:AUTH_LOGOUT};}export function autoLogin(){return function(dispatch){var token=localStorage.getItem('token');if(!token){dispatch(logout());}else{var expirationDate=new Date(localStorage.getItem('expirationDate'));if(expirationDate<=new Date()){dispatch(logout());}else{dispatch(authSuccess(token));dispatch(autoLogout((expirationDate.getTime()-new Date().getTime())/1000));}}};}export function authSuccess(token){return{type:AUTH_SUCCESS,token:token};}","map":{"version":3,"sources":["/Users/sergeymac/Web/React application /react-quiz(redux)/src/store/actions/auth.js"],"names":["axios","AUTH_SUCCESS","AUTH_LOGOUT","auth","email","password","isLogin","dispatch","authData","returnSecureToken","url","post","response","data","expirationDate","Date","getTime","expiresIn","localStorage","setItem","idToken","localId","authSuccess","autoLogout","time","setTimeout","logout","removeItem","type","autoLogin","token","getItem"],"mappings":"6VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,YAAR,CAAsBC,WAAtB,KAAwC,eAAxC,CAEA,MAAO,SAASC,CAAAA,IAAT,CAAeC,KAAf,CAAsBC,QAAtB,CAAgCC,OAAhC,CAAyC,CAC/C,+FAAO,iBAAMC,QAAN,gKAEAC,QAFA,CAEW,CACPJ,KAAK,CAALA,KADO,CACAC,QAAQ,CAARA,QADA,CAEPI,iBAAiB,CAAE,IAFZ,CAFX,CAOIC,GAPJ,CAOU,uGAPV,CASA,GAAIJ,OAAJ,CAAa,CACZI,GAAG,CAAG,mHAAN,CAEA,CAZD,sBAcuBV,CAAAA,KAAK,CAACW,IAAN,CAAWD,GAAX,CAAgBF,QAAhB,CAdvB,QAcMI,QAdN,eAeMC,IAfN,CAeaD,QAAQ,CAACC,IAftB,CAiBMC,cAjBN,CAiBuB,GAAIC,CAAAA,IAAJ,CAAS,GAAIA,CAAAA,IAAJ,GAAWC,OAAX,GAAuBH,IAAI,CAACI,SAAL,CAAiB,IAAjD,CAjBvB,CAmBAC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BN,IAAI,CAACO,OAAnC,EACAF,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA+BN,IAAI,CAACQ,OAApC,EACAH,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAuCL,cAAvC,EAEAP,QAAQ,CAACe,WAAW,CAACT,IAAI,CAACO,OAAN,CAAZ,CAAR,CACAb,QAAQ,CAACgB,UAAU,CAACV,IAAI,CAACI,SAAN,CAAX,CAAR,CAxBA,uDAAP,+DA2BA,CAED,MAAO,SAASM,CAAAA,UAAT,CAAoBC,IAApB,CAA0B,CAChC,MAAO,UAAAjB,QAAQ,CAAI,CAClBkB,UAAU,CAAC,UAAM,CAChBlB,QAAQ,CAACmB,MAAM,EAAP,CAAR,CACA,CAFS,CAEPF,IAAI,CAAG,IAFA,CAAV,CAGA,CAJD,CAKA,CAED,MAAO,SAASE,CAAAA,MAAT,EAAkB,CACxBR,YAAY,CAACS,UAAb,CAAwB,OAAxB,EACAT,YAAY,CAACS,UAAb,CAAwB,QAAxB,EACAT,YAAY,CAACS,UAAb,CAAwB,gBAAxB,EACA,MAAO,CACNC,IAAI,CAAE1B,WADA,CAAP,CAGA,CAED,MAAO,SAAS2B,CAAAA,SAAT,EAAqB,CAC3B,MAAO,UAAAtB,QAAQ,CAAI,CAClB,GAAMuB,CAAAA,KAAK,CAAGZ,YAAY,CAACa,OAAb,CAAqB,OAArB,CAAd,CACA,GAAI,CAACD,KAAL,CAAY,CACXvB,QAAQ,CAACmB,MAAM,EAAP,CAAR,CACA,CAFD,IAEO,CACN,GAAMZ,CAAAA,cAAc,CAAG,GAAIC,CAAAA,IAAJ,CAASG,YAAY,CAACa,OAAb,CAAqB,gBAArB,CAAT,CAAvB,CACA,GAAIjB,cAAc,EAAI,GAAIC,CAAAA,IAAJ,EAAtB,CAAkC,CACjCR,QAAQ,CAACmB,MAAM,EAAP,CAAR,CACA,CAFD,IAEO,CACNnB,QAAQ,CAACe,WAAW,CAACQ,KAAD,CAAZ,CAAR,CACAvB,QAAQ,CAACgB,UAAU,CAAC,CAACT,cAAc,CAACE,OAAf,GAA2B,GAAID,CAAAA,IAAJ,GAAWC,OAAX,EAA5B,EAAoD,IAArD,CAAX,CAAR,CACA,CACD,CACD,CAbD,CAcA,CAED,MAAO,SAASM,CAAAA,WAAT,CAAqBQ,KAArB,CAA4B,CAClC,MAAO,CACNF,IAAI,CAAE3B,YADA,CAEN6B,KAAK,CAALA,KAFM,CAAP,CAIA","sourcesContent":["import axios from 'axios'\nimport {AUTH_SUCCESS, AUTH_LOGOUT} from './actionTypes'\n\nexport function auth (email, password, isLogin) {\n\treturn async dispatch => {\n\n\t\tconst authData = {\n            email, password,\n            returnSecureToken: true\n        }\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCbBoRoHs00xHTbFhRuwxba00aAPuNpwQo'\n\n        if (isLogin) {\n        \turl = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCbBoRoHs00xHTbFhRuwxba00aAPuNpwQo'\n\n        }\n       \n        const response = await axios.post(url, authData)\n        const data = response.data\n\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\n\n        localStorage.setItem('token', data.idToken)\n        localStorage.setItem('userId', data.localId)\n        localStorage.setItem('expirationDate', expirationDate)\n\n        dispatch(authSuccess(data.idToken))\n        dispatch(autoLogout(data.expiresIn))\n\n\t}\n}\n\nexport function autoLogout(time) {\n\treturn dispatch => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(logout())\n\t\t}, time * 1000)\n\t}\n}\n\nexport function logout() {\n\tlocalStorage.removeItem('token')\n\tlocalStorage.removeItem('userId')\n\tlocalStorage.removeItem('expirationDate')\n\treturn {\n\t\ttype: AUTH_LOGOUT\n\t}\n}\n\nexport function autoLogin() {\n\treturn dispatch => {\n\t\tconst token = localStorage.getItem('token')\n\t\tif (!token) {\n\t\t\tdispatch(logout())\n\t\t} else {\n\t\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'))\n\t\t\tif (expirationDate <= new Date()) {\n\t\t\t\tdispatch(logout())\n\t\t\t} else {\n\t\t\t\tdispatch(authSuccess(token))\n\t\t\t\tdispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000 ))\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function authSuccess(token) {\n\treturn {\n\t\ttype: AUTH_SUCCESS,\n\t\ttoken\n\t}\n}"]},"metadata":{},"sourceType":"module"}