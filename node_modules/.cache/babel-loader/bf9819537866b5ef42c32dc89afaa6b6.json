{"ast":null,"code":"var _jsxFileName = \"/Users/sergeymac/Web/React application /react-quiz(redux)/src/containers/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport classes from './Auth.module.scss';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { auth } from '../../store/actions/auth';\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isFormValid: false,\n      formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Введите корректный email',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: 'password',\n          label: 'Пароль',\n          errorMessage: 'Введите корректный пароль',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n\n    this.loginHandler = () => {\n      this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, true);\n    };\n\n    this.registerHandler = () => {\n      this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, false);\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.onChangeHandler = (event, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      const control = { ...formControls[controlName]\n      };\n      control.value = event.target.value;\n      control.touched = true;\n      control.valid = this.validateControl(control.value, control.validation);\n      formControls[controlName] = control;\n      let isFormValid = true;\n      Object.keys(formControls).forEach(name => {\n        isFormValid = formControls[name].valid && isFormValid;\n      });\n      this.setState({\n        formControls,\n        isFormValid\n      });\n    };\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (validation.email) {\n      isValid = validateEmail(value) && isValid;\n    }\n\n    if (validation.minLength) {\n      isValid = value.length >= validation.minLength && isValid;\n    }\n\n    return isValid;\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/React.createElement(Input, {\n        key: controlName + index,\n        type: control.type,\n        value: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => this.onChangeHandler(event, controlName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      className: classes.AuthForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, this.renderInputs(), /*#__PURE__*/React.createElement(Button, {\n      type: \"sucsess\",\n      onClick: this.loginHandler,\n      disabled: !this.state.isFormValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.registerHandler,\n      disabled: !this.state.isFormValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"))));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    auth: (email, password, isLogin) => dispatch(auth((email, password, isLogin)))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/Users/sergeymac/Web/React application /react-quiz(redux)/src/containers/Auth/Auth.js"],"names":["React","Component","classes","Button","Input","axios","connect","auth","validateEmail","email","re","test","String","toLowerCase","Auth","state","isFormValid","formControls","value","type","label","errorMessage","valid","touched","validation","required","password","minLength","loginHandler","props","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","Object","keys","forEach","name","setState","isValid","trim","length","renderInputs","map","index","render","AuthForm","mapDispatchToProps","dispatch","isLogin"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,0BAAnB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,QAAMC,EAAE,GAAG,uJAAX;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAR,CAAP;AACH;;AAED,MAAMC,IAAN,SAAmBb,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAE5Bc,KAF4B,GAEpB;AACPC,MAAAA,WAAW,EAAE,KADN;AAEPC,MAAAA,YAAY,EAAE;AACbR,QAAAA,KAAK,EAAE;AACNS,UAAAA,KAAK,EAAE,EADD;AAENC,UAAAA,IAAI,EAAE,OAFA;AAGNC,UAAAA,KAAK,EAAE,OAHD;AAINC,UAAAA,YAAY,EAAE,0BAJR;AAKNC,UAAAA,KAAK,EAAE,KALD;AAMNC,UAAAA,OAAO,EAAE,KANH;AAONC,UAAAA,UAAU,EAAE;AACXC,YAAAA,QAAQ,EAAE,IADC;AAEXhB,YAAAA,KAAK,EAAE;AAFI;AAPN,SADM;AAabiB,QAAAA,QAAQ,EAAE;AACTR,UAAAA,KAAK,EAAE,EADE;AAETC,UAAAA,IAAI,EAAE,UAFG;AAGTC,UAAAA,KAAK,EAAE,QAHE;AAITC,UAAAA,YAAY,EAAE,2BAJL;AAKTC,UAAAA,KAAK,EAAE,KALE;AAMTC,UAAAA,OAAO,EAAE,KANA;AAOTC,UAAAA,UAAU,EAAE;AACXC,YAAAA,QAAQ,EAAE,IADC;AAEXE,YAAAA,SAAS,EAAE;AAFA;AAPH;AAbG;AAFP,KAFoB;;AAAA,SAkCzBC,YAlCyB,GAkCV,MAAM;AACjB,WAAKC,KAAL,CAAWtB,IAAX,CACI,KAAKQ,KAAL,CAAWE,YAAX,CAAwBR,KAAxB,CAA8BS,KADlC,EAEI,KAAKH,KAAL,CAAWE,YAAX,CAAwBS,QAAxB,CAAiCR,KAFrC,EAGI,IAHJ;AAKH,KAxCwB;;AAAA,SA0CzBY,eA1CyB,GA0CP,MAAM;AACpB,WAAKD,KAAL,CAAWtB,IAAX,CACI,KAAKQ,KAAL,CAAWE,YAAX,CAAwBR,KAAxB,CAA8BS,KADlC,EAEI,KAAKH,KAAL,CAAWE,YAAX,CAAwBS,QAAxB,CAAiCR,KAFrC,EAGI,KAHJ;AAOH,KAlDwB;;AAAA,SAoDzBa,aApDyB,GAoDTC,KAAK,IAAI;AACxBA,MAAAA,KAAK,CAACC,cAAN;AACA,KAtDwB;;AAAA,SAgFzBC,eAhFyB,GAgFP,CAACF,KAAD,EAAQG,WAAR,KAAwB;AACtC,YAAMlB,YAAY,GAAG,EAAE,GAAG,KAAKF,KAAL,CAAWE;AAAhB,OAArB;AACA,YAAMmB,OAAO,GAAG,EAAE,GAAGnB,YAAY,CAACkB,WAAD;AAAjB,OAAhB;AAEAC,MAAAA,OAAO,CAAClB,KAAR,GAAgBc,KAAK,CAACK,MAAN,CAAanB,KAA7B;AACAkB,MAAAA,OAAO,CAACb,OAAR,GAAkB,IAAlB;AACAa,MAAAA,OAAO,CAACd,KAAR,GAAgB,KAAKgB,eAAL,CAAqBF,OAAO,CAAClB,KAA7B,EAAoCkB,OAAO,CAACZ,UAA5C,CAAhB;AAEAP,MAAAA,YAAY,CAACkB,WAAD,CAAZ,GAA4BC,OAA5B;AAEA,UAAIpB,WAAW,GAAG,IAAlB;AAEAuB,MAAAA,MAAM,CAACC,IAAP,CAAYvB,YAAZ,EAA0BwB,OAA1B,CAAkCC,IAAI,IAAI;AACzC1B,QAAAA,WAAW,GAAGC,YAAY,CAACyB,IAAD,CAAZ,CAAmBpB,KAAnB,IAA4BN,WAA1C;AACA,OAFD;AAMA,WAAK2B,QAAL,CAAc;AACb1B,QAAAA,YADa;AACCD,QAAAA;AADD,OAAd;AAGH,KArGwB;AAAA;;AAwDzBsB,EAAAA,eAAe,CAACpB,KAAD,EAAQM,UAAR,EAAoB;AAClC,QAAI,CAACA,UAAL,EAAiB;AAChB,aAAO,IAAP;AACA;;AAED,QAAIoB,OAAO,GAAG,IAAd;;AAEA,QAAIpB,UAAU,CAACC,QAAf,EAAyB;AACxBmB,MAAAA,OAAO,GAAG1B,KAAK,CAAC2B,IAAN,OAAiB,EAAjB,IAAuBD,OAAjC;AACA;;AAED,QAAIpB,UAAU,CAACf,KAAf,EAAsB;AACrBmC,MAAAA,OAAO,GAAGpC,aAAa,CAACU,KAAD,CAAb,IAAwB0B,OAAlC;AACA;;AAED,QAAIpB,UAAU,CAACG,SAAf,EAA0B;AACzBiB,MAAAA,OAAO,GAAG1B,KAAK,CAAC4B,MAAN,IAAgBtB,UAAU,CAACG,SAA3B,IAAwCiB,OAAlD;AAEA;;AAED,WAAOA,OAAP;AAEA;;AAyBDG,EAAAA,YAAY,GAAG;AACd,WAAOR,MAAM,CAACC,IAAP,CAAY,KAAKzB,KAAL,CAAWE,YAAvB,EAAqC+B,GAArC,CAAyC,CAACb,WAAD,EAAcc,KAAd,KAAwB;AACvE,YAAMb,OAAO,GAAG,KAAKrB,KAAL,CAAWE,YAAX,CAAwBkB,WAAxB,CAAhB;AACM,0BACC,oBAAC,KAAD;AACE,QAAA,GAAG,EAAEA,WAAW,GAAGc,KADrB;AAEE,QAAA,IAAI,EAAEb,OAAO,CAACjB,IAFhB;AAGE,QAAA,KAAK,EAAEiB,OAAO,CAAClB,KAHjB;AAIE,QAAA,KAAK,EAAEkB,OAAO,CAACd,KAJjB;AAKE,QAAA,OAAO,EAAEc,OAAO,CAACb,OALnB;AAME,QAAA,KAAK,EAAEa,OAAO,CAAChB,KANjB;AAOE,QAAA,cAAc,EAAE,CAAC,CAACgB,OAAO,CAACZ,UAP5B;AAQE,QAAA,YAAY,EAAEY,OAAO,CAACf,YARxB;AASE,QAAA,QAAQ,EAAEW,KAAK,IAAI,KAAKE,eAAL,CAAqBF,KAArB,EAA4BG,WAA5B,CATrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAaN,KAfM,CAAP;AAgBA;;AAEJe,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAEhD,OAAO,CAACY,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EADX,eAEW;AAAM,MAAA,QAAQ,EAAE,KAAKiB,aAArB;AAAoC,MAAA,SAAS,EAAE7B,OAAO,CAACiD,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKJ,YAAL,EAFJ,eAIE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,EAAE,KAAKnB,YAFhB;AAGE,MAAA,QAAQ,EAAE,CAAC,KAAKb,KAAL,CAAWC,WAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJF,eAYE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,OAAO,EAAE,KAAKc,eAFhB;AAGE,MAAA,QAAQ,EAAE,CAAC,KAAKf,KAAL,CAAWC,WAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sHAZF,CAFX,CADF,CADD;AA2BA;;AAtJ2B;;AAyJ7B,SAASoC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACH9C,IAAAA,IAAI,EAAE,CAACE,KAAD,EAAQiB,QAAR,EAAkB4B,OAAlB,KAA8BD,QAAQ,CAAC9C,IAAI,EAAEE,KAAK,EAAEiB,QAAF,EAAY4B,OAAnB,EAAL;AADzC,GAAP;AAGH;;AAED,eAAehD,OAAO,CAAC,IAAD,EAAO8C,kBAAP,CAAP,CAAkCtC,IAAlC,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport classes from './Auth.module.scss'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {auth} from '../../store/actions/auth'\n\n\nfunction validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nclass Auth extends Component {\n\n\tstate = {\n\t\tisFormValid: false,\n\t\tformControls: {\n\t\t\temail: {\n\t\t\t\tvalue: '',\n\t\t\t\ttype: 'email',\n\t\t\t\tlabel: 'Email',\n\t\t\t\terrorMessage: 'Введите корректный email',\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\temail: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\tvalue: '',\n\t\t\t\ttype: 'password',\n\t\t\t\tlabel: 'Пароль',\n\t\t\t\terrorMessage: 'Введите корректный пароль',\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 6\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n    \n    loginHandler = () => {\n        this.props.auth(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n            true\n        )\n    }\n\n    registerHandler = () => {\n        this.props.auth(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n            false\n        )\n        \n\n    }\n    \n    submitHandler = event => {\n    \tevent.preventDefault()\n    }\n    \n    validateControl(value, validation) {\n    \tif (!validation) {\n    \t\treturn true \n    \t}\n\n    \tlet isValid = true\n\n    \tif (validation.required) {\n    \t\tisValid = value.trim() !== '' && isValid\n    \t}\n\n    \tif (validation.email) {\n    \t\tisValid = validateEmail(value) && isValid\n    \t}\n\n    \tif (validation.minLength) {\n    \t\tisValid = value.length >= validation.minLength && isValid\n\n    \t}\n\n    \treturn isValid\n\n    }\n\n    onChangeHandler = (event, controlName) => {\n        const formControls = { ...this.state.formControls }\n        const control = { ...formControls[controlName] }\n\n        control.value = event.target.value\n        control.touched = true\n        control.valid = this.validateControl(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        let isFormValid = true\n\n        Object.keys(formControls).forEach(name => {\n        \tisFormValid = formControls[name].valid && isFormValid\n        })\n\n\n\n        this.setState({\n        \tformControls, isFormValid\n        })\n    }   \n\n    renderInputs() {\n    \treturn Object.keys(this.state.formControls).map((controlName, index) => {\n    \t\tconst control = this.state.formControls[controlName]\n            return (\n            \t<Input\n            \t  key={controlName + index}\n            \t  type={control.type}\n            \t  value={control.value}\n            \t  valid={control.valid}\n            \t  touched={control.touched}\n            \t  label={control.label}\n            \t  shouldValidate={!!control.validation}\n            \t  errorMessage={control.errorMessage}\n            \t  onChange={event => this.onChangeHandler(event, controlName)}\n            \t/>\n            )\n    \t})\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Auth}>\n\t\t\t  <div>\n                <h1>Авторизация</h1>\n                <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n                  \n                  { this.renderInputs() } \n\n                  <Button \n                    type=\"sucsess\" \n                    onClick={this.loginHandler}\n                    disabled={!this.state.isFormValid}\n                  >\n                    Войти\n                  </Button>\n\n                  <Button \n                    type=\"primary\" \n                    onClick={this.registerHandler}\n                    disabled={!this.state.isFormValid}\n                  >\n                    Зарегистрироваться\n                  </Button>\n                </form>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        auth: (email, password, isLogin) => dispatch(auth((email, password, isLogin)))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Auth)"]},"metadata":{},"sourceType":"module"}