{"ast":null,"code":"var _jsxFileName = \"/Users/sergeymac/Web/React attachment /react-quiz/src/containers/QuizCreator/QuizCreator.js\";\nimport React, { Component } from 'react';\nimport classes from './QuizCreator.module.scss';\nimport Button from '../../components/UI/Button/Button';\nimport Input from '../../components/UI/Input/Input';\nimport { createControl } from '../../form/formFramework';\n\nfunction createOpitonControl(number) {\n  return createControl({\n    label: `Вариант ${number}`,\n    errorMessage: 'Значение не может быть пустым',\n    id: number\n  }, {\n    required: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMessage: 'Вопрос не может быть пустым'\n    }, {\n      required: true\n    }),\n    option1: createOpitonControl(1),\n    option2: createOpitonControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nexport default class QuizCreator extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quiz: [],\n      formControls: createFormControls()\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.addQuestionHandler = () => {};\n\n    this.createQuizHandler = () => {};\n\n    this.changeHandler = (value, controlName) => {};\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/React.createElement(Input, {\n        label: control.label,\n        value: control.value,\n        valid: control.valid,\n        shouldValide: !!control.validation,\n        touched: control.touched,\n        errorMessage: control.errorMessage,\n        onChange: event => this.changeHandler(event.target.value, controlName),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.QuizCreator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, this.renderControls(), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      onClick: this.addQuestionHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"sucsess\",\n      onClick: this.createQuizHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, \"\\xA0\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"))));\n  }\n\n}","map":{"version":3,"sources":["/Users/sergeymac/Web/React attachment /react-quiz/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Button","Input","createControl","createOpitonControl","number","label","errorMessage","id","required","createFormControls","question","option1","option2","option3","createOptionControl","option4","QuizCreator","state","quiz","formControls","submitHandler","event","preventDefault","addQuestionHandler","createQuizHandler","changeHandler","value","controlName","renderControls","Object","keys","map","index","control","valid","validation","touched","target","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './QuizCreator.module.scss'\nimport Button from '../../components/UI/Button/Button'\nimport Input from  '../../components/UI/Input/Input'\nimport {createControl} from  '../../form/formFramework'\n\nfunction createOpitonControl(number) {\n\treturn createControl({\n\t  label: `Вариант ${number}`,\n\t  errorMessage: 'Значение не может быть пустым',\n\t  id: number\n    }, {required: true})\n}\n\nfunction createFormControls() {\n\treturn { question: createControl({\n\t\t\t\tlabel: 'Введите вопрос',\n\t\t\t\terrorMessage: 'Вопрос не может быть пустым'\n\t\t\t}, {required: true}),\n\t\t\toption1: createOpitonControl(1),\n\t\t\toption2: createOpitonControl(2),\n\t\t\toption3: createOptionControl(3),\n\t\t\toption4: createOptionControl(4) \n\n\t}\n\n}\n\nexport default class QuizCreator extends Component {\n\n\tstate = {\n\t\tquiz: [],\n\t\tformControls: createFormControls()\n\t}\n\nsubmitHandler = event => {\n\tevent.preventDefault()\n}\n\naddQuestionHandler = () => {\n\n}\n\ncreateQuizHandler = () => {\n\n}\n\nchangeHandler = (value, controlName) => {\n\n}\n\nrenderControls() {\n\treturn Object.keys(this.state.formControls).map((controlName, index) => {\n\t\tconst control = this.state.formControls[controlName]\n\n\t\treturn (\n          <Input\n            label={control.label}\n            value={control.value}\n            valid={control.valid}\n            shouldValide={!!control.validation}\n            touched={control.touched}\n            errorMessage={control.errorMessage}\n            onChange={event => this.changeHandler(event.target.value, controlName)}\n\n          />\n\t\t)\n\n\t})\n}\n\n\trender() { \n\t\treturn (\n\t\t\t<div className={classes.QuizCreator}>\n\t\t\t  <div>\n                <h1>Создание теста</h1>\n                <form onSubmit={this.submitHandler}>\n                  \n                  { this.renderControls() }\n\n                  <select></select>\n\n                  <Button\n                    type=\"primary\"\n                    onClick={this.addQuestionHandler}\n                  >\n                    Добавить вопрос\n                  </Button>\n\n                  <Button\n                    type=\"sucsess\"\n                    onClick={this.createQuizHandler}\n                  >\n                     Создать тест\n                  </Button>\n\n\n                </form>\n\n\t\t\t  </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}