{"ast":null,"code":"import _defineProperty from\"/Users/sergeymac/Web/React application /react-quiz(redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"/Users/sergeymac/Web/React application /react-quiz(redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/sergeymac/Web/React application /react-quiz(redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'../../axios/axios-quiz';import{FETCH_QUIZES_START,FETCH_QUIZES_SUCCESS,FETCH_QUIZES_ERROR,FETCH_QUIZ_SUCCESS,QUIZ_SET_STATE,FINISH_QUIZ,QUIZ_NEXT_QUESTION,QUIZ_RETRY}from'./actionTypes';export function fetchQuizes(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var response,quizes;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(fetchQuizesStart());_context.prev=1;_context.next=4;return axios.get('/quizes.json');case 4:response=_context.sent;quizes=[];Object.keys(response.data).forEach(function(key,index){quizes.push({id:key,name:\"\\u0422\\u0435\\u0441\\u0442 \\u2116\".concat(index+1)});});dispatch(fetchQuizesSuccess(quizes));_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);dispatch(fetchQuizesError(_context.t0));case 13:case\"end\":return _context.stop();}}},_callee,null,[[1,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();}export function fetchQuizById(quizId){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var response,quiz;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(fetchQuizesStart());_context2.prev=1;_context2.next=4;return axios.get(\"/quizes/\".concat(quizId,\".json\"));case 4:response=_context2.sent;quiz=response.data;dispatch(fetchQuizSuccess(quiz));_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](1);dispatch(fetchQuizesError(_context2.t0));case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[1,9]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();}export function fetchQuizSuccess(quiz){return{type:FETCH_QUIZ_SUCCESS,quiz:quiz};}export function fetchQuizesStart(){return{type:FETCH_QUIZES_START};}export function fetchQuizesSuccess(quizes){return{type:FETCH_QUIZES_SUCCESS,quizes:quizes};}export function fetchQuizesError(e){return{type:FETCH_QUIZES_ERROR,error:e};}export function quizSetState(answerState,results){return{type:QUIZ_SET_STATE,answerState:answerState,results:results};}export function finishQuiz(){return{type:FINISH_QUIZ};}export function quizNextQuestion(number){return{type:QUIZ_NEXT_QUESTION,number:number};}export function retryQuiz(){return{type:QUIZ_RETRY};}export function quizAnswerClick(answerId){return function(dispatch,getState){var state=getState().quiz;if(state.answerState){var key=Object.keys(state.answerState)[0];if(state.answerState[key]==='sucsess'){return;}}var question=state.quiz[state.activeQuestion];var results=state.results;if(question.rightAnswerId===answerId){if(!results[question.id]){results[question.id]='sucsess';}dispatch(quizSetState(_defineProperty({},answerId,'sucsess'),results));var timeout=window.setTimeout(function(){if(isQuizFinished(state)){dispatch(finishQuiz());}else{dispatch(quizNextQuestion(state.activeQuestion+1));}window.clearTimeout(timeout);},1000);}else{results[question.id]='error';dispatch(quizSetState(_defineProperty({},answerId,'error'),results));}};}function isQuizFinished(state){return state.activeQuestion+1===state.quiz.length;}","map":{"version":3,"sources":["/Users/sergeymac/Web/React application /react-quiz(redux)/src/store/actions/quiz.js"],"names":["axios","FETCH_QUIZES_START","FETCH_QUIZES_SUCCESS","FETCH_QUIZES_ERROR","FETCH_QUIZ_SUCCESS","QUIZ_SET_STATE","FINISH_QUIZ","QUIZ_NEXT_QUESTION","QUIZ_RETRY","fetchQuizes","dispatch","fetchQuizesStart","get","response","quizes","Object","keys","data","forEach","key","index","push","id","name","fetchQuizesSuccess","fetchQuizesError","fetchQuizById","quizId","quiz","fetchQuizSuccess","type","e","error","quizSetState","answerState","results","finishQuiz","quizNextQuestion","number","retryQuiz","quizAnswerClick","answerId","getState","state","question","activeQuestion","rightAnswerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","length"],"mappings":"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","sourcesContent":["import axios from '../../axios/axios-quiz'\nimport {\n\tFETCH_QUIZES_START, \n\tFETCH_QUIZES_SUCCESS, \n\tFETCH_QUIZES_ERROR, \n\tFETCH_QUIZ_SUCCESS,\n\tQUIZ_SET_STATE,\n\tFINISH_QUIZ,\n\tQUIZ_NEXT_QUESTION,\n\tQUIZ_RETRY\n} from './actionTypes'\n\nexport function fetchQuizes() {\n\treturn async dispatch => {\n\t\tdispatch(fetchQuizesStart())\n\t\ttry {\n\t\t    const response = await axios.get('/quizes.json')\n\n\t\t    const quizes = []\n\n\t\t    Object.keys(response.data).forEach((key, index) => {\n\t\t        quizes.push({\n\t\t            id: key,\n\t\t            name: `Тест №${index + 1}`\n\t\t        })\n\t\t    })\n\t\t    dispatch(fetchQuizesSuccess(quizes))\n\t\t}  catch (e) {\n\t\t    dispatch(fetchQuizesError(e))\n\t\t}\n\n\t}\n}\n\nexport function fetchQuizById(quizId) {\n\treturn async dispatch => {\n\t\tdispatch(fetchQuizesStart())\n\n\t\ttry {\n    \t  const response =  await axios.get(`/quizes/${quizId}.json`)\n    \t  const quiz = response.data\n\n    \t  dispatch(fetchQuizSuccess(quiz))\n    \t} catch (e) {\n    \t  dispatch(fetchQuizesError(e))\n    \t}\n\t}\n}\n\nexport function fetchQuizSuccess(quiz) {\n\treturn {\n\t\ttype: FETCH_QUIZ_SUCCESS,\n\t\tquiz\n\t}\n\n}\n\nexport function fetchQuizesStart() {\n\treturn {\n\t\ttype: FETCH_QUIZES_START\n\t}\n}\n\nexport function fetchQuizesSuccess(quizes) {\n\treturn {\n\t\ttype: FETCH_QUIZES_SUCCESS,\n\t\tquizes: quizes\n\t}\n}\n\nexport function fetchQuizesError(e) {\n\treturn {\n\t\ttype: FETCH_QUIZES_ERROR,\n\t\terror: e\n\t}\n}\n\nexport function quizSetState(answerState, results) {\n\treturn {\n\t\ttype: QUIZ_SET_STATE,\n\t\tanswerState, results\n\t}\n}\n\nexport function finishQuiz() {\n\treturn {\n\t\ttype: FINISH_QUIZ\n\t}\n}\n\nexport function quizNextQuestion(number) {\n\treturn {\n\t\ttype: QUIZ_NEXT_QUESTION,\n\t\tnumber\n\t}\n}\n\nexport function retryQuiz() {\n\treturn {\n\t\ttype: QUIZ_RETRY\n\t}\n}\n\nexport function quizAnswerClick(answerId) {\n\treturn (dispatch, getState) => {\n\t\tconst state = getState().quiz\n\t\t\t\tif (state.answerState) {\n\t\t\t\t\t  const key = Object.keys(state.answerState)[0]\n\t\t\t\t\t  if (state.answerState[key] === 'sucsess') {\n\t\t\t\t\t  \treturn\n\t\t\t\t\t  }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst question = state.quiz[state.activeQuestion]\n\t\t        const results = state.results\n\n\t\t\t\tif(question.rightAnswerId === answerId) {\n\n\t\t\t\t\tif(!results[question.id]) {\n\t\t\t\t\t\tresults[question.id] = 'sucsess'\n\t\t\t\t\t}\n\n\t\t\t\t\tdispatch(quizSetState({[answerId]: 'sucsess'}, results))\n\n\t\t\t\t\tconst timeout = window.setTimeout(() => {\n\n\t\t\t\t\t\tif (isQuizFinished(state)) {\n\t\t\t\t\t\t\tdispatch(finishQuiz())   \n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdispatch(quizNextQuestion(state.activeQuestion + 1))\n\t\t\t\t\t\t}\n\t\t\t\t\t\twindow.clearTimeout(timeout)\n\t\t\t\t\t}, 1000)\n\t\t\t\t} else {\n\t\t\t\t\tresults[question.id] = 'error'\n\t\t\t\t\tdispatch(quizSetState({[answerId]: 'error'}, results))\n\t\t\t\t}\n\t}\n\n}\n\nfunction isQuizFinished(state) {\n\treturn state.activeQuestion + 1 === state.quiz.length\n}"]},"metadata":{},"sourceType":"module"}