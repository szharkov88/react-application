{"ast":null,"code":"import _objectSpread from\"/Users/sergeymac/Web/React application /react-quiz(redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/sergeymac/Web/React application /react-quiz(redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sergeymac/Web/React application /react-quiz(redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/sergeymac/Web/React application /react-quiz(redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sergeymac/Web/React application /react-quiz(redux)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import classes from'./QuizCreator.module.scss';import Button from'../../components/UI/Button/Button';import Input from'../../components/UI/Input/Input';import Select from'../../components/UI/Select/Select';import{createControl,validate,validateForm}from'../../form/formFramework';import Auxilliary from'../../hoc/Auxilliary/Auxilliary';import{connect}from'react-redux';import{createQuizQuestion as _createQuizQuestion,finishCreateQuiz as _finishCreateQuiz}from'../../store/actions/create';function createOptionControl(number){return createControl({label:\"\\u0412\\u0430\\u0440\\u0438\\u0430\\u043D\\u0442 \".concat(number),errorMessage:'Значение не может быть пустым',id:number},{required:true});}function createFormControls(){return{question:createControl({label:'Введите вопрос',errorMessage:'Вопрос не может быть пустым'},{required:true}),option1:createOptionControl(1),option2:createOptionControl(2),option3:createOptionControl(3),option4:createOptionControl(4)};}var QuizCreator=/*#__PURE__*/function(_Component){_inherits(QuizCreator,_Component);var _super=_createSuper(QuizCreator);function QuizCreator(){var _this;_classCallCheck(this,QuizCreator);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isFormValid:false,rightAnswerId:1,formControls:createFormControls()};_this.submitHandler=function(event){event.preventDefault();};_this.addQuestionHandler=function(event){event.preventDefault();var _this$state$formContr=_this.state.formControls,question=_this$state$formContr.question,option1=_this$state$formContr.option1,option2=_this$state$formContr.option2,option3=_this$state$formContr.option3,option4=_this$state$formContr.option4;var questionItem={question:question.value,id:_this.props.quiz.length+1,rightAnswerId:_this.state.rightAnswerId,answers:[{text:option1.value,id:option1.id},{text:option2.value,id:option2.id},{text:option3.value,id:option3.id},{text:option4.value,id:option4.id}]};_this.props.createQuizQuestion(questionItem);_this.setState({isFormValid:false,rightAnswerId:1,formControls:createFormControls(questionItem)});};_this.createQuizHandler=function(event){event.preventDefault();_this.setState({isFormValid:false,rightAnswerId:1,formControls:createFormControls()});_this.props.finishCreateQuiz();};_this.changeHandler=function(value,controlName){var formControls=_objectSpread({},_this.state.formControls);var control=_objectSpread({},formControls[controlName]);control.touched=true;control.value=value;control.valid=validate(control.value,control.validation);formControls[controlName]=control;_this.setState({formControls:formControls,isFormValid:validateForm(formControls)});};_this.selectChangeHandler=function(event){_this.setState({rightAnswerId:+event.target.value});};return _this;}_createClass(QuizCreator,[{key:\"renderControls\",value:function renderControls(){var _this2=this;return Object.keys(this.state.formControls).map(function(controlName,index){var control=_this2.state.formControls[controlName];return/*#__PURE__*/React.createElement(Auxilliary,{key:controlName+index},/*#__PURE__*/React.createElement(Input,{label:control.label,value:control.value,valid:control.valid,shouldValidate:!!control.validation,touched:control.touched,errorMessage:control.errorMessage,onChange:function onChange(event){return _this2.changeHandler(event.target.value,controlName);}}),index===0?/*#__PURE__*/React.createElement(\"hr\",null):null);});}},{key:\"render\",value:function render(){var select=/*#__PURE__*/React.createElement(Select,{label:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u043F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0432\\u0435\\u0442\",value:this.state.rightAnswerId,onChange:this.selectChangeHandler,options:[{text:1,value:1},{text:2,value:2},{text:3,value:3},{text:4,value:4}]});return/*#__PURE__*/React.createElement(\"div\",{className:classes.QuizCreator},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.submitHandler},this.renderControls(),select,/*#__PURE__*/React.createElement(Button,{type:\"primary\",onClick:this.addQuestionHandler,disabled:!this.state.isFormValid},\"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"),/*#__PURE__*/React.createElement(Button,{type:\"sucsess\",onClick:this.createQuizHandler,disabled:this.props.quiz.length===0},\"\\xA0\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"))));}}]);return QuizCreator;}(Component);function mapStateToProps(state){return{quiz:state.create.quiz};}function mapDispatchToProps(dispatch){return{createQuizQuestion:function createQuizQuestion(item){return dispatch(_createQuizQuestion(item));},finishCreateQuiz:function finishCreateQuiz(){return dispatch(_finishCreateQuiz());}};}export default connect(mapStateToProps,mapDispatchToProps)(QuizCreator);","map":{"version":3,"sources":["/Users/sergeymac/Web/React application /react-quiz(redux)/src/containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Button","Input","Select","createControl","validate","validateForm","Auxilliary","connect","createQuizQuestion","finishCreateQuiz","createOptionControl","number","label","errorMessage","id","required","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","isFormValid","rightAnswerId","formControls","submitHandler","event","preventDefault","addQuestionHandler","questionItem","value","props","quiz","length","answers","text","setState","createQuizHandler","changeHandler","controlName","control","touched","valid","validation","selectChangeHandler","target","Object","keys","map","index","select","renderControls","mapStateToProps","create","mapDispatchToProps","dispatch","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classes from './QuizCreator.module.scss'\nimport Button from '../../components/UI/Button/Button'\nimport Input from  '../../components/UI/Input/Input'\nimport Select from '../../components/UI/Select/Select'\nimport {createControl, validate, validateForm} from  '../../form/formFramework'\nimport Auxilliary from '../../hoc/Auxilliary/Auxilliary'\nimport {connect} from 'react-redux'\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create'\n\nfunction createOptionControl(number) {\n\treturn createControl({\n\t  label: `Вариант ${number}`,\n\t  errorMessage: 'Значение не может быть пустым',\n\t  id: number\n    }, {required: true})\n}\n\nfunction createFormControls() {\n\treturn { question: createControl({\n\t\t\t\tlabel: 'Введите вопрос',\n\t\t\t\terrorMessage: 'Вопрос не может быть пустым'\n\t\t\t}, {required: true}),\n\t\t\toption1: createOptionControl(1),\n\t\t\toption2: createOptionControl(2),\n\t\t\toption3: createOptionControl(3),\n\t\t\toption4: createOptionControl(4) \n\n\t}\n\n}\n\nclass QuizCreator extends Component {\n\n\tstate = {\n\t\tisFormValid: false,\n\t\trightAnswerId: 1,\n\t\tformControls: createFormControls()\n\t}\n\nsubmitHandler = event => {\n\tevent.preventDefault()\n}\n\naddQuestionHandler = event => {\n\tevent.preventDefault()\n\n\tconst {question, option1, option2, option3, option4} = this.state.formControls\n    \n    const questionItem = {\n    \tquestion: question.value,\n    \tid: this.props.quiz.length + 1,\n    \trightAnswerId: this.state.rightAnswerId,\n    \tanswers: [\n    \t {text: option1.value, id: option1.id},\n    \t {text: option2.value, id: option2.id},\n    \t {text: option3.value, id: option3.id},\n    \t {text: option4.value, id: option4.id}\n    \t]\n    }\n\n    this.props.createQuizQuestion(questionItem)\n\n    this.setState({\n    \tisFormValid: false,\n    \trightAnswerId: 1,\n    \tformControls: createFormControls(questionItem)\n    })\n\n}\n\n\ncreateQuizHandler = event => {\n\tevent.preventDefault()\n\n  this.setState({\n    isFormValid: false,\n    rightAnswerId: 1,\n    formControls: createFormControls()\n  })\n  this.props.finishCreateQuiz()\n}\n\nchangeHandler = (value, controlName) => {\n\t const formControls = { ...this.state.formControls }\n     const control = { ...formControls[controlName] }\n\n     control.touched = true\n     control.value = value \n     control.valid = validate(control.value, control.validation)\n\n     formControls[controlName] = control\n\n     this.setState({\n     \tformControls,\n     \tisFormValid: validateForm(formControls)\n     })\n\n}\n\nrenderControls() {\n\treturn Object.keys(this.state.formControls).map((controlName, index) => {\n\t\tconst control = this.state.formControls[controlName]\n\n\t\treturn (\n          <Auxilliary key={controlName + index}>\n            <Input\n            label={control.label}\n            value={control.value}\n            valid={control.valid}\n            shouldValidate={!!control.validation}\n            touched={control.touched}\n            errorMessage={control.errorMessage}\n            onChange={event => this.changeHandler(event.target.value, controlName)}\n            />\n            { index === 0 ? <hr /> : null }\n          </Auxilliary>\n\t\t)\n\n\t})\n}\n\nselectChangeHandler = event => {\n\tthis.setState({\n\t\trightAnswerId: +event.target.value\n\t})\n}\n\n\trender() { \n\n\t\tconst select = <Select\n\t\tlabel=\"Выберете правильный ответ\"\n\t\tvalue={this.state.rightAnswerId}\n\t\tonChange={this.selectChangeHandler}\n\t\toptions={[\n\t\t\t{text: 1, value: 1},\n\t\t\t{text: 2, value: 2},\n\t\t\t{text: 3, value: 3},\n\t\t\t{text: 4, value: 4},\n\t\t]}\n\n\t\t/>\n\t\treturn (\n\t\t\t<div className={classes.QuizCreator}>\n\t\t\t  <div>\n                <h1>Создание теста</h1>\n                <form onSubmit={this.submitHandler}>\n                  \n                  { this.renderControls() }\n\n                  { select }\n\n                  <Button\n                    type=\"primary\"\n                    onClick={this.addQuestionHandler}\n                    disabled={!this.state.isFormValid}\n                  >\n                    Добавить вопрос\n                  </Button>\n\n                  <Button\n                    type=\"sucsess\"\n                    onClick={this.createQuizHandler}\n                    disabled={this.props.quiz.length === 0}\n                  >\n                     Создать тест\n                  </Button>\n\n\n                </form>\n\n\t\t\t  </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps(state) {\n  return{\n    quiz: state.create.quiz\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (QuizCreator)"]},"metadata":{},"sourceType":"module"}