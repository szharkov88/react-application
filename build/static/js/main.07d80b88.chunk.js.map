{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.scss","components/Navigation/MenuToggle/MenuToggle.module.scss","containers/Quiz/Quiz.module.scss","components/ActiveQuiz/ActiveQuiz.module.scss","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.scss","components/FinishedQuiz/FinishedQuiz.module.scss","components/UI/Button/Button.module.scss","components/UI/Loader/Loader.module.scss","containers/Auth/Auth.module.scss","components/UI/Input/Input.module.scss","hoc/Layout/Layout.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/ActiveQuiz/AnswersList/AnswersList.module.scss","containers/QuizCreator/QuizCreator.module.scss","components/UI/Select/Select.module.scss","containers/QuizList/QuizList.module.scss","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","hoc/Auxilliary/Auxilliary.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","containers/QuizList/QuizList.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","sucsessCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","fetchQuizSuccess","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","activeQuestion","quizAnswerClick","dispatch","quizId","a","get","response","data","answerId","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","number","clearTimeout","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","forEach","name","isValid","trim","test","String","toLowerCase","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","Auxilliary","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","QuizList","fetchQuizes","renderQuizes","Logout","App","autoLogin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","reusults","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.07d80b88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__k9oZ1\",\"close\":\"Drawer_close__157sK\",\"active\":\"Drawer_active__2oACK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__21_pH\",\"open\":\"MenuToggle_open__3GTM9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2THIz\",\"QuizWrapper\":\"Quiz_QuizWrapper__2wTef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__2OH8k\",\"Question\":\"ActiveQuiz_Question__3-k9k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__uovHA\",\"sucsess\":\"AnswerItem_sucsess__14M1m\",\"error\":\"AnswerItem_error__2qb2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2aARn\",\"sucsess\":\"FinishedQuiz_sucsess__3vfP5\",\"error\":\"FinishedQuiz_error__2PlTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2Ajf-\",\"error\":\"Button_error__A4xET\",\"sucsess\":\"Button_sucsess__2QyFX\",\"primary\":\"Button_primary__CVuDV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3cxM3\",\"lds-ripple\":\"Loader_lds-ripple__20g5-\",\"center\":\"Loader_center__3DNW3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__7JmWy\",\"AuthForm\":\"Auth_AuthForm__2fbR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SNRl4\",\"invalid\":\"Input_invalid__1ZOur\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__ACkHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__Vem4f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1ulOJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__2CeNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__26ooE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__EsJjC\"};","import React from 'react'\nimport classes from './MenuToggle.module.scss'\n\nconst MenuToggle = props => {\n    \n    const cls = [\n      classes.MenuToggle,\n      'fa',\n    ]\n\n    if (props.isOpen) {\n    \tcls.push('fa-times')\n    \tcls.push(classes.open)\n    } else {\n    \tcls.push('fa-bars')\n    }\n    \n\treturn (\n\t\t<i\n\t\t  className={cls.join(' ')}\n\t\t  onClick={props.onToggle}\n\t\t/>\n \t)\n}\n\nexport default MenuToggle","import React from 'react'\nimport classes from './Backdrop.module.scss'\n\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\n\nexport default Backdrop","import React, {Component} from 'react'\nimport classes from './Drawer.module.scss'\nimport Backdrop from '../../UI/Backdrop/Backdrop'\nimport {NavLink} from 'react-router-dom'\n\nclass Drawer extends Component {\n    \n    clickHandler = () => {\n    \tthis.props.onClose()\n    }\n\n\n\trenderLinks(links) {\n\t\treturn links.map((link, index) => {\n\t\t\treturn (\n\t\t\t\t  <li key={index}>\n\t\t\t\t      <NavLink\n\t\t\t\t       to={link.to} \n\t\t\t\t       exact={link.exact}\n\t\t\t\t       activeClassName={classes.active}\n\t\t\t\t       onClick={this.clickHandler}\n\t\t\t\t      >\n\t\t\t\t       {link.label}\n\t\t\t\t      </NavLink>\n\t\t\t\t  </li>\n\t\t\t)\n\t\t})\n\t}\n\n\trender() {\n\n\t\tconst cls = [classes.Drawer]\n\n\t\tif (!this.props.isOpen) {\n\t\t\tcls.push(classes.close)\n\t\t}\n\n\t\tconst links = [\n                 {to: '/', label: 'Список', exact: true},\n         ]\n\n         if (this.props.isAuthenticated) {\n         \tlinks.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\n         \tlinks.push({to: '/logout', label: 'Выйти', exact: false})\n         } else {\n         \tlinks.push({to: '/auth', label: 'Авторизация', exact: false})\n         }\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t     <nav className={cls.join(' ')}>\n\t\t\t          <ul>\n\t\t\t           { this.renderLinks(links) } \n\t\t\t          </ul>\n\t\t\t     </nav>\n\t\t\t     { this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null }\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\nexport default Drawer","import React, {Component} from 'react'\nimport classes from './Layout.module.scss'\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\nimport {connect} from 'react-redux'\n\n\n \nclass Layout extends Component {\n\tstate = {\n\t\tmenu: false\n\t}\n    toggleMenuHandler = () => {\n    \tthis.setState({\n    \t\tmenu: !this.state.menu\n    \t})\n\n    }\n     \n    menuCloseHandler = () => {\n    \tthis.setState({\n    \t\tmenu: false\n    \t})\n    }\n\n    render() {\n    \treturn (\n    \t\t<div className={classes.Layout}>\n\n    \t\t  <Drawer\n    \t\t  isOpen={this.state.menu}\n    \t\t  onClose={this.menuCloseHandler}\n              isAuthenticated={this.props.isAuthenticated}\n    \t\t  />\n\n    \t\t  <MenuToggle\n    \t\t   onToggle={this.toggleMenuHandler}\n    \t\t   isOpen={this.state.menu}\n    \t\t  />\n\n    \t\t  <main>\n    \t\t    {this.props.children}\n    \t\t  </main>\n    \t\t</div>\n    \t)\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticated: !!state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps)(Layout)","import React from 'react'\nimport classes from './AnswerItem.module.scss'\n\nconst AnswerItem = props => {\n\n\tconst cls = [classes.AnswerItem]\n\n\n\tif (props.state) {\n       cls.push(classes[props.state]) \n\t}\n\treturn (\n\t\t<li \n\t\tclassName={cls.join(' ')}\n\t\tonClick={() => props.onAnswerClick(props.answer.id)}\n\t\t>\n\t\t{ props.answer.text }\n\t\t</li>\n\t)\n}\n\nexport default AnswerItem ","import React from 'react'\nimport classes from './AnswersList.module.scss' \nimport AnswerItem from './AnswerItem/AnswerItem'\n\nconst AnswersList = props => (\n\t<ul className={classes.AnswersList}>\n\t\t{ props.answers.map((answer, index) => {\n\t\t\treturn (\n\t\t\t\t  <AnswerItem \n\n\t\t\t\t  key={index}\n\t\t\t\t  answer={answer}\n\t\t\t\t  onAnswerClick={props.onAnswerClick}\n\t\t\t\t  state={props.state ? props.state[answer.id] : null}\n\t\t\t\t  />\n\t\t\t\t)\n\t\t}) }\n\t</ul>\n)\n\nexport default AnswersList","import React from 'react'\nimport classes from './ActiveQuiz.module.scss'\nimport AnswersList from './AnswersList/AnswersList'\n\nconst ActiveQuiz = props => (\n      <div className={classes.ActiveQuiz}>\n        <p className={classes.Question}>\n         <span>\n         <strong>{props.answerNumber}.</strong>&nbsp;\n          {props.question}\n         </span>\n         <small>{props.answerNumber} из {props.quizLength}</small>\n        </p>\n\n        <AnswersList \n         state={props.state}\n         answers={props.answers}\n         onAnswerClick={props.onAnswerClick}\n        />\n      </div>\n)\n\nexport default ActiveQuiz","import React from 'react'\nimport classes from './Button.module.scss'\n\nconst Button = props => {\n\tconst cls = [\n\t  classes.Button,\n\t  classes[props.type]\n\n\t]\n \n  return (\n  \t<button\n  \t  onClick={props.onClick}\n  \t  className={cls.join(' ')}\n  \t  disabled={props.disabled}\n  \t>\n  \t {props.children}\n\n  \t</button>\n\n  )\n}\n\nexport default Button","import React from 'react'\nimport classes from './FinishedQuiz.module.scss'\nimport Button from '../UI/Button/Button'\nimport {Link} from 'react-router-dom'\n\nconst FinishedQuiz = props => {\n    const sucsessCount = Object.keys(props.results).reduce((total, key) => {\n    \tif (props.results[key] === 'sucsess') {\n    \t\ttotal++\n    \t}\n\n    \treturn total\n    }, 0)\n\treturn (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n              { props.quiz.map((quizItem,index) => {\n                 const cls = [\n                   'fa', \n                   props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                   classes[props.results[quizItem.id]]\n\n                 ]\n\n                 return (\n                        <li\n                          key={index}\n                        >\n                          <strong>{index+1}</strong>.&nbsp;\n                          {quizItem.question}\n                          <i className={cls.join(' ')} />\n\n                        </li>\n                 \t)\n\n              })}\n                \n            </ul>\n\n            <p>Правильно {sucsessCount} из {props.quiz.length}</p>\n            <div>\n                <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\n                <Link to=\"/\">\n                  <Button type=\"sucsess\">Перейти в список тестов</Button>\n                </Link>\n            </div>\n        </div>\n\t)\n}\n\nexport default FinishedQuiz","import React from  'react'\nimport classes from './Loader.module.scss'\n\nconst Loader = props => (\n\t<div className={classes.center}>\n\t  <div className={classes.Loader}>\n\t    <div /><div />\n\t  </div>\n\t</div>\n)\n\nexport default Loader","import axios from 'axios'\n\nexport default axios.create({\n\tbaseURL: 'https://react-quiz-4c50d.firebaseio.com/'\n})","import axios from '../../axios/axios-quiz'\nimport {\n\tFETCH_QUIZES_START, \n\tFETCH_QUIZES_SUCCESS, \n\tFETCH_QUIZES_ERROR, \n\tFETCH_QUIZ_SUCCESS,\n\tQUIZ_SET_STATE,\n\tFINISH_QUIZ,\n\tQUIZ_NEXT_QUESTION,\n\tQUIZ_RETRY\n} from './actionTypes'\n\nexport function fetchQuizes() {\n\treturn async dispatch => {\n\t\tdispatch(fetchQuizesStart())\n\t\ttry {\n\t\t    const response = await axios.get('/quizes.json')\n\n\t\t    const quizes = []\n\n\t\t    Object.keys(response.data).forEach((key, index) => {\n\t\t        quizes.push({\n\t\t            id: key,\n\t\t            name: `Тест №${index + 1}`\n\t\t        })\n\t\t    })\n\t\t    dispatch(fetchQuizesSuccess(quizes))\n\t\t}  catch (e) {\n\t\t    dispatch(fetchQuizesError(e))\n\t\t}\n\n\t}\n}\n\nexport function fetchQuizById(quizId) {\n\treturn async dispatch => {\n\t\tdispatch(fetchQuizesStart())\n\n\t\ttry {\n    \t  const response =  await axios.get(`/quizes/${quizId}.json`)\n    \t  const quiz = response.data\n\n    \t  dispatch(fetchQuizSuccess(quiz))\n    \t} catch (e) {\n    \t  dispatch(fetchQuizesError(e))\n    \t}\n\t}\n}\n\nexport function fetchQuizSuccess(quiz) {\n\treturn {\n\t\ttype: FETCH_QUIZ_SUCCESS,\n\t\tquiz\n\t}\n\n}\n\nexport function fetchQuizesStart() {\n\treturn {\n\t\ttype: FETCH_QUIZES_START\n\t}\n}\n\nexport function fetchQuizesSuccess(quizes) {\n\treturn {\n\t\ttype: FETCH_QUIZES_SUCCESS,\n\t\tquizes: quizes\n\t}\n}\n\nexport function fetchQuizesError(e) {\n\treturn {\n\t\ttype: FETCH_QUIZES_ERROR,\n\t\terror: e\n\t}\n}\n\nexport function quizSetState(answerState, results) {\n\treturn {\n\t\ttype: QUIZ_SET_STATE,\n\t\tanswerState, results\n\t}\n}\n\nexport function finishQuiz() {\n\treturn {\n\t\ttype: FINISH_QUIZ\n\t}\n}\n\nexport function quizNextQuestion(number) {\n\treturn {\n\t\ttype: QUIZ_NEXT_QUESTION,\n\t\tnumber\n\t}\n}\n\nexport function retryQuiz() {\n\treturn {\n\t\ttype: QUIZ_RETRY\n\t}\n}\n\nexport function quizAnswerClick(answerId) {\n\treturn (dispatch, getState) => {\n\t\tconst state = getState().quiz\n\t\t\t\tif (state.answerState) {\n\t\t\t\t\t  const key = Object.keys(state.answerState)[0]\n\t\t\t\t\t  if (state.answerState[key] === 'sucsess') {\n\t\t\t\t\t  \treturn\n\t\t\t\t\t  }\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst question = state.quiz[state.activeQuestion]\n\t\t        const results = state.results\n\n\t\t\t\tif(question.rightAnswerId === answerId) {\n\n\t\t\t\t\tif(!results[question.id]) {\n\t\t\t\t\t\tresults[question.id] = 'sucsess'\n\t\t\t\t\t}\n\n\t\t\t\t\tdispatch(quizSetState({[answerId]: 'sucsess'}, results))\n\n\t\t\t\t\tconst timeout = window.setTimeout(() => {\n\n\t\t\t\t\t\tif (isQuizFinished(state)) {\n\t\t\t\t\t\t\tdispatch(finishQuiz())   \n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdispatch(quizNextQuestion(state.activeQuestion + 1))\n\t\t\t\t\t\t}\n\t\t\t\t\t\twindow.clearTimeout(timeout)\n\t\t\t\t\t}, 1000)\n\t\t\t\t} else {\n\t\t\t\t\tresults[question.id] = 'error'\n\t\t\t\t\tdispatch(quizSetState({[answerId]: 'error'}, results))\n\t\t\t\t}\n\t}\n\n}\n\nfunction isQuizFinished(state) {\n\treturn state.activeQuestion + 1 === state.quiz.length\n}"," export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\n export const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\n export const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERRROR'\n export const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\n\n export const QUIZ_SET_STATE = 'QUIZ_SET_STATE'\n export const FINISH_QUIZ = 'FINISH_QUIZ'\n export const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\n export const QUIZ_RETRY = 'QUIZ_RETRY'\n\n export const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\n export const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\n\n export const AUTH_SUCCESS = 'AUTH_SUCCESS'\n export const AUTH_LOGOUT = 'AUTH_LOGOUT'\n","import React, {Component} from 'react'\nimport classes from './Quiz.module.scss'\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\nimport Loader from '../../components/UI/Loader/Loader'\nimport {connect} from 'react-redux'\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from '../../store/actions/quiz'\n\nclass Quiz extends Component {\n     \n    componentDidMount() {\n    \tthis.props.fetchQuizById(this.props.match.params.id)\n    }\n\n    componentWillUnmount() {\n    \tthis.props.retryQuiz()\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Quiz}>\n\t\t\t <div className={classes.QuizWrapper}>\n\t\t\t  <h1>Ответьте на все вопросы</h1>\n\t\t\t  {\n\t\t\t  \tthis.props.loading || !this.props.quiz\n\t\t\t  \t? <Loader />\n\t\t\t  \t:   this.props.isFinished\n\t\t\t  \t    ? <FinishedQuiz \n                      results={this.props.results}\n                      quiz={this.props.quiz}\n                      onRetry={this.props.retryQuiz}\n\t\t\t  \t      />\n\t\t\t  \t    : <ActiveQuiz\n\t\t\t          answers={this.props.quiz[this.props.activeQuestion].answers}\n\t\t\t          question={this.props.quiz[this.props.activeQuestion].question}\n\t\t\t          onAnswerClick={this.props.quizAnswerClick}\n\t\t\t          quizLength={this.props.quiz.length}\n\t\t\t          answerNumber={this.props.activeQuestion + 1}\n\t\t\t          state={this.props.answerState}\n\t\t\t          />    \n\t\t\t  }\t\t  \n\t\t\t </div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tresults: state.quiz.results,\n\t\tisFinished: state.quiz.isFinished,\n\t\tactiveQuestion: state.quiz.activeQuestion,\n\t\tanswerState: state.quiz.answerState,\n\t\tquiz: state.quiz.quiz,\n\t\tloading: state.quiz.loading\n\n\t}\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tfetchQuizById: id => dispatch(fetchQuizById(id)),\n\t\tquizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\n\t\tretryQuiz: () => dispatch(retryQuiz())\n\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Quiz)","import React from 'react'\nimport classes from './Input.module.scss'\n\n\n\nfunction isInvalid({valid, touched, shouldValidate}) {\n\treturn !valid && shouldValidate && touched\n\n}\n\nconst Input = props => {\n const inputType = props.type || 'text'\n const cls = [classes.Input]\n const htmlFor = `${inputType}-${Math.random()}`\n\n if (isInvalid(props)) {\n \tcls.push(classes.invalid)\n }\n\n\treturn (\n\t\t<div className={cls.join(' ')}>\n          <label htmlFor={htmlFor}>{props.label}</label>\n          <input \n            type={inputType}\n            id={htmlFor}\n            value={props.value}\n            onChange={props.onChange}\n          />\n          \n          {\n          \tisInvalid(props)\n          \t  ? <span>{props.errorMessage || 'Введите верное значение'}</span>\n          \t  : null\n          }\n\t\t</div>\n\n\n\t)\n}\n\nexport default Input","import axios from 'axios'\nimport {AUTH_SUCCESS, AUTH_LOGOUT} from './actionTypes'\n\nexport function auth (email, password, isLogin) {\n\treturn async dispatch => {\n\n\t\tconst authData = {\n            email, password,\n            returnSecureToken: true\n        }\n\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCbBoRoHs00xHTbFhRuwxba00aAPuNpwQo'\n\n        if (isLogin) {\n        \turl = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCbBoRoHs00xHTbFhRuwxba00aAPuNpwQo'\n\n        }\n       \n        const response = await axios.post(url, authData)\n        const data = response.data\n\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\n\n        localStorage.setItem('token', data.idToken)\n        localStorage.setItem('userId', data.localId)\n        localStorage.setItem('expirationDate', expirationDate)\n\n        dispatch(authSuccess(data.idToken))\n        dispatch(autoLogout(data.expiresIn))\n\n\t}\n}\n\nexport function autoLogout(time) {\n\treturn dispatch => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(logout())\n\t\t}, time * 1000)\n\t}\n}\n\nexport function logout() {\n\tlocalStorage.removeItem('token')\n\tlocalStorage.removeItem('userId')\n\tlocalStorage.removeItem('expirationDate')\n\treturn {\n\t\ttype: AUTH_LOGOUT\n\t}\n}\n\nexport function autoLogin() {\n\treturn dispatch => {\n\t\tconst token = localStorage.getItem('token')\n\t\tif (!token) {\n\t\t\tdispatch(logout())\n\t\t} else {\n\t\t\tconst expirationDate = new Date(localStorage.getItem('expirationDate'))\n\t\t\tif (expirationDate <= new Date()) {\n\t\t\t\tdispatch(logout())\n\t\t\t} else {\n\t\t\t\tdispatch(authSuccess(token))\n\t\t\t\tdispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000 ))\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function authSuccess(token) {\n\treturn {\n\t\ttype: AUTH_SUCCESS,\n\t\ttoken\n\t}\n}","import React, {Component} from 'react'\nimport classes from './Auth.module.scss'\nimport Button from '../../components/UI/Button/Button'\nimport Input from '../../components/UI/Input/Input'\nimport {connect} from 'react-redux'\nimport {auth} from '../../store/actions/auth'\n\n\nfunction validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n}\n\nclass Auth extends Component {\n\n\tstate = {\n\t\tisFormValid: false,\n\t\tformControls: {\n\t\t\temail: {\n\t\t\t\tvalue: '',\n\t\t\t\ttype: 'email',\n\t\t\t\tlabel: 'Email',\n\t\t\t\terrorMessage: 'Введите корректный email',\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\temail: true\n\t\t\t\t}\n\t\t\t},\n\t\t\tpassword: {\n\t\t\t\tvalue: '',\n\t\t\t\ttype: 'password',\n\t\t\t\tlabel: 'Пароль',\n\t\t\t\terrorMessage: 'Введите корректный пароль',\n\t\t\t\tvalid: false,\n\t\t\t\ttouched: false,\n\t\t\t\tvalidation: {\n\t\t\t\t\trequired: true,\n\t\t\t\t\tminLength: 6\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t}\n    \n    loginHandler = () => {\n        this.props.auth(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n            true\n        )\n    }\n\n    registerHandler = () => {\n        this.props.auth(\n            this.state.formControls.email.value,\n            this.state.formControls.password.value,\n            false\n        )\n        \n\n    }\n    \n    submitHandler = event => {\n    \tevent.preventDefault()\n    }\n    \n    validateControl(value, validation) {\n    \tif (!validation) {\n    \t\treturn true \n    \t}\n\n    \tlet isValid = true\n\n    \tif (validation.required) {\n    \t\tisValid = value.trim() !== '' && isValid\n    \t}\n\n    \tif (validation.email) {\n    \t\tisValid = validateEmail(value) && isValid\n    \t}\n\n    \tif (validation.minLength) {\n    \t\tisValid = value.length >= validation.minLength && isValid\n\n    \t}\n\n    \treturn isValid\n\n    }\n\n    onChangeHandler = (event, controlName) => {\n        const formControls = { ...this.state.formControls }\n        const control = { ...formControls[controlName] }\n\n        control.value = event.target.value\n        control.touched = true\n        control.valid = this.validateControl(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        let isFormValid = true\n\n        Object.keys(formControls).forEach(name => {\n        \tisFormValid = formControls[name].valid && isFormValid\n        })\n\n\n\n        this.setState({\n        \tformControls, isFormValid\n        })\n    }   \n\n    renderInputs() {\n    \treturn Object.keys(this.state.formControls).map((controlName, index) => {\n    \t\tconst control = this.state.formControls[controlName]\n            return (\n            \t<Input\n            \t  key={controlName + index}\n            \t  type={control.type}\n            \t  value={control.value}\n            \t  valid={control.valid}\n            \t  touched={control.touched}\n            \t  label={control.label}\n            \t  shouldValidate={!!control.validation}\n            \t  errorMessage={control.errorMessage}\n            \t  onChange={event => this.onChangeHandler(event, controlName)}\n            \t/>\n            )\n    \t})\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.Auth}>\n\t\t\t  <div>\n                <h1>Авторизация</h1>\n                <form onSubmit={this.submitHandler} className={classes.AuthForm}>\n                  \n                  { this.renderInputs() } \n\n                  <Button \n                    type=\"sucsess\" \n                    onClick={this.loginHandler}\n                    disabled={!this.state.isFormValid}\n                  >\n                    Войти\n                  </Button>\n\n                  <Button \n                    type=\"primary\" \n                    onClick={this.registerHandler}\n                    disabled={!this.state.isFormValid}\n                  >\n                    Зарегистрироваться\n                  </Button>\n                </form>\n\t\t\t  </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Auth)","import React from 'react'\nimport classes from './Select.module.scss'\n\nconst Select = props => {\n    const htmlFor = `${props.label}-${Math.random()}`\n\n\treturn (\n\t  <div className={classes.Select}>\n\t    <label htmlFor={htmlFor}>{props.label}</label>\n\t    <select\n\t      id={htmlFor}\n\t      value={props.value}\n\t      onChange={props.onChange}\n\t    >\n\t      { props.options.map((option, index) => {\n              return (\n                <option\n                value={option.value}\n                key={option.value + index}\n                >\n                 {option.text}\n                </option>\n              )\n\t      }) }\n\n\t    </select>\n\t  </div>\n\t)\n}\n\nexport default Select","export function createControl(config, validation) {\n\treturn {\n\t\t...config,\n\t\tvalidation,\n\t\tvalid: !validation,\n\t\ttouched: false,\n\t\tvalue: ''\n\t}\n}\n\nexport function validate(value, validation = null) {\n\tif (!validation) {\n\t\treturn true \n\t}\n\n\tlet isValid = true\n\n\tif (validation.required) {\n\t   isValid = value.trim() !== '' && isValid\n\t}\n\n\treturn isValid\n}\n\n\nexport function validateForm(formControls) {\n\tlet isFormValid = true\n\n\tfor (let control in formControls) {\n\t\tif (formControls.hasOwnProperty(control)) {\n\t\t\tisFormValid = formControls[control].valid && isFormValid\n\t\t}\n\t}\n\n\treturn isFormValid\n\n}","const Auxilliary = props => props.children\n\nexport default Auxilliary ","import React, {Component} from 'react'\nimport classes from './QuizCreator.module.scss'\nimport Button from '../../components/UI/Button/Button'\nimport Input from  '../../components/UI/Input/Input'\nimport Select from '../../components/UI/Select/Select'\nimport {createControl, validate, validateForm} from  '../../form/formFramework'\nimport Auxilliary from '../../hoc/Auxilliary/Auxilliary'\nimport {connect} from 'react-redux'\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create'\n\nfunction createOptionControl(number) {\n\treturn createControl({\n\t  label: `Вариант ${number}`,\n\t  errorMessage: 'Значение не может быть пустым',\n\t  id: number\n    }, {required: true})\n}\n\nfunction createFormControls() {\n\treturn { question: createControl({\n\t\t\t\tlabel: 'Введите вопрос',\n\t\t\t\terrorMessage: 'Вопрос не может быть пустым'\n\t\t\t}, {required: true}),\n\t\t\toption1: createOptionControl(1),\n\t\t\toption2: createOptionControl(2),\n\t\t\toption3: createOptionControl(3),\n\t\t\toption4: createOptionControl(4) \n\n\t}\n\n}\n\nclass QuizCreator extends Component {\n\n\tstate = {\n\t\tisFormValid: false,\n\t\trightAnswerId: 1,\n\t\tformControls: createFormControls()\n\t}\n\nsubmitHandler = event => {\n\tevent.preventDefault()\n}\n\naddQuestionHandler = event => {\n\tevent.preventDefault()\n\n\tconst {question, option1, option2, option3, option4} = this.state.formControls\n    \n    const questionItem = {\n    \tquestion: question.value,\n    \tid: this.props.quiz.length + 1,\n    \trightAnswerId: this.state.rightAnswerId,\n    \tanswers: [\n    \t {text: option1.value, id: option1.id},\n    \t {text: option2.value, id: option2.id},\n    \t {text: option3.value, id: option3.id},\n    \t {text: option4.value, id: option4.id}\n    \t]\n    }\n\n    this.props.createQuizQuestion(questionItem)\n\n    this.setState({\n    \tisFormValid: false,\n    \trightAnswerId: 1,\n    \tformControls: createFormControls(questionItem)\n    })\n\n}\n\n\ncreateQuizHandler = event => {\n\tevent.preventDefault()\n\n  this.setState({\n    isFormValid: false,\n    rightAnswerId: 1,\n    formControls: createFormControls()\n  })\n  this.props.finishCreateQuiz()\n}\n\nchangeHandler = (value, controlName) => {\n\t const formControls = { ...this.state.formControls }\n     const control = { ...formControls[controlName] }\n\n     control.touched = true\n     control.value = value \n     control.valid = validate(control.value, control.validation)\n\n     formControls[controlName] = control\n\n     this.setState({\n     \tformControls,\n     \tisFormValid: validateForm(formControls)\n     })\n\n}\n\nrenderControls() {\n\treturn Object.keys(this.state.formControls).map((controlName, index) => {\n\t\tconst control = this.state.formControls[controlName]\n\n\t\treturn (\n          <Auxilliary key={controlName + index}>\n            <Input\n            label={control.label}\n            value={control.value}\n            valid={control.valid}\n            shouldValidate={!!control.validation}\n            touched={control.touched}\n            errorMessage={control.errorMessage}\n            onChange={event => this.changeHandler(event.target.value, controlName)}\n            />\n            { index === 0 ? <hr /> : null }\n          </Auxilliary>\n\t\t)\n\n\t})\n}\n\nselectChangeHandler = event => {\n\tthis.setState({\n\t\trightAnswerId: +event.target.value\n\t})\n}\n\n\trender() { \n\n\t\tconst select = <Select\n\t\tlabel=\"Выберете правильный ответ\"\n\t\tvalue={this.state.rightAnswerId}\n\t\tonChange={this.selectChangeHandler}\n\t\toptions={[\n\t\t\t{text: 1, value: 1},\n\t\t\t{text: 2, value: 2},\n\t\t\t{text: 3, value: 3},\n\t\t\t{text: 4, value: 4},\n\t\t]}\n\n\t\t/>\n\t\treturn (\n\t\t\t<div className={classes.QuizCreator}>\n\t\t\t  <div>\n                <h1>Создание теста</h1>\n                <form onSubmit={this.submitHandler}>\n                  \n                  { this.renderControls() }\n\n                  { select }\n\n                  <Button\n                    type=\"primary\"\n                    onClick={this.addQuestionHandler}\n                    disabled={!this.state.isFormValid}\n                  >\n                    Добавить вопрос\n                  </Button>\n\n                  <Button\n                    type=\"sucsess\"\n                    onClick={this.createQuizHandler}\n                    disabled={this.props.quiz.length === 0}\n                  >\n                     Создать тест\n                  </Button>\n\n\n                </form>\n\n\t\t\t  </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps(state) {\n  return{\n    quiz: state.create.quiz\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (QuizCreator)","import axios from '../../axios/axios-quiz'\nimport {\n\tCREATE_QUIZ_QUESTION,\n\tRESET_QUIZ_CREATION\n} from './actionTypes'\n\n\nexport function createQuizQuestion(item) {\n\treturn {\n\t\ttype: CREATE_QUIZ_QUESTION,\n\t\titem\n\t}\n\n}\n\nexport function resetQuizCreation() {\n\treturn {\n\t\ttype: RESET_QUIZ_CREATION\n\t}\n}\n\nexport function finishCreateQuiz() {\n\treturn async (dispatch, getState) => {\n\t\tawait axios.post('/quizes.json', getState().create.quiz)\n\t\tdispatch(resetQuizCreation())\n\t}\n\n}","import React, {Component} from 'react'\nimport classes from './QuizList.module.scss'\nimport {NavLink} from 'react-router-dom'\nimport Loader from '../../components/UI/Loader/Loader'\nimport {connect} from 'react-redux'\nimport {fetchQuizes} from '../../store/actions/quiz'\n\n\nclass QuizList extends Component {\n\n    renderQuizes() {\n    \treturn this.props.quizes.map(quiz =>  {\n    \t\treturn (\n    \t\t\t<li\n    \t\t\t  key={quiz.id}\n    \t\t\t>\n    \t\t\t <NavLink to={'/quiz/' + quiz.id}>\n    \t\t\t   {quiz.name}\n    \t\t\t </NavLink>\n    \t\t\t</li>\n    \t\t)\n    \t})\n    }\n\n    componentDidMount() {\n        this.props.fetchQuizes()\n\n    }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={classes.QuizList}>\n\t\t\t  <div>\n\t\t\t    <h1>Список тестов</h1>\n                { \n                    this.props.loading && this.props.quizes.length !== 0\n                      ? <Loader />\n                      : <ul>\n                         { this.renderQuizes() }\n                        </ul>\n                }\n\n\t\t\t  </div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nfunction mapStateToProps(state) {\n    return {\n        quizes: state.quiz.quizes,\n        loading: state.quiz.loading\n\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        fetchQuizes: () => dispatch(fetchQuizes())\n\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)\n","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom' \nimport {logout} from '../../store/actions/auth'\n\nclass Logout extends Component {\n\t\n\tcomponentDidMount() {\n\t\tthis.props.logout()\n\t}\n\n\trender() {\n\t\treturn <Redirect to={'/'} />\n\t}\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tlogout: () => dispatch(logout())\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react'\nimport Layout from './hoc/Layout/Layout'\nimport Quiz from './containers/Quiz/Quiz'\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport Auth from './containers/Auth/Auth'\nimport QuizCreator from './containers/QuizCreator/QuizCreator'\nimport QuizList from './containers/QuizList/QuizList'\nimport {connect} from 'react-redux'\nimport Logout from './components/Logout/Logout'\nimport {autoLogin} from './store/actions/auth'\n\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.autoLogin() \n  }\n\n  render() {\n\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/quiz/:id\" component={Quiz} />\n        <Route path=\"/\" exact component={QuizList} />\n        <Redirect to=\"/\" />\n      </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/quiz-creator\" component={QuizCreator} />\n          <Route path=\"/quiz/:id\" component={Quiz} />\n          <Route path=\"/logout\" component={Logout} />\n          <Route path=\"/\" exact component={QuizList} />\n          <Redirect to=\"/\" />\n        </Switch>\n      )\n    }\n\n    return (\n      <Layout> \n        { routes }\n      </Layout> \n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App)) ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\n\tFETCH_QUIZES_START, \n\tFETCH_QUIZES_SUCCESS, \n\tFETCH_QUIZES_ERROR, \n\tFETCH_QUIZ_SUCCESS, \n\tQUIZ_SET_STATE, \n\tFINISH_QUIZ, \n\tQUIZ_NEXT_QUESTION,\n\tQUIZ_RETRY\n} from '../actions/actionTypes'\n\nconst initialState = {\n\tquizes: [],\n    loading: false,\n    error: null,\n    results: {},\n    isFinished: false,\n    activeQuestion: 0,\n    answerState: null,\n    quiz: null,\n}\n\nexport default function quizReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase FETCH_QUIZES_START:\n\t\t  return {\n\t\t  \t...state, loading: true\n\t\t  }\n\t\tcase FETCH_QUIZES_SUCCESS:\n\t\t  return {\n\t\t  \t...state, loading: false, quizes: action.quizes\n\t\t  }\n\t\tcase FETCH_QUIZES_ERROR:\n\t\t  return {\n\t\t  \t...state, loading: false, error: action.error\n\t\t  }    \n\t\tcase FETCH_QUIZ_SUCCESS:\n\t\t  return {\n\t\t  \t...state, loading: false, quiz: action.quiz\n\t\t  }\n\t\tcase QUIZ_SET_STATE:\n\t\t  return {\n\t\t  \t...state, answerState: action.answerState, reusults: action.results\n\t\t  }\n\t\tcase FINISH_QUIZ:\n\t\t  return {\n\t\t  \t...state, isFinished: true\n\t\t  }\n\t\tcase QUIZ_NEXT_QUESTION:\n\t\t  return {\n\t\t  \t...state, answerState: null, activeQuestion: action.number\n\t\t  }\n\t\tcase QUIZ_RETRY:\n\t\t  return {\n\t\t  \t...state,\n\t\t  \tactiveQuestion: 0,\n\t\t    answerState: null,\n\t\t    isFinished: false,\n\t\t    results: {}\n\t\t  }\n\n\n\t\tdefault:\n\t\treturn state\n\t}\n}","import {\n\tCREATE_QUIZ_QUESTION, \n\tRESET_QUIZ_CREATION\n} from '../actions/actionTypes'\n\nconst initialState = {\n\tquiz: []\n}\n\nexport default function createRuducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase CREATE_QUIZ_QUESTION:\n\t\t    return {\n\t\t    \t...state, \n\t\t    \tquiz: [...state.quiz, action.item]\n\t\t    }\n\t\tcase RESET_QUIZ_CREATION:\n\t\t    return {\n\t\t    \t...state, quiz: []\n\t\t    }\n\t\tdefault:\n\t\treturn state\n\t}\n}\n\n","import {AUTH_SUCCESS, AUTH_LOGOUT} from '../actions/actionTypes'\n\nconst initialState = {\n\ttoken: null\n}\n\n\nexport default function authReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase AUTH_SUCCESS:\n\t\treturn {\n\t\t\t...state, token: action.token\n\t\t}\n\t\tcase AUTH_LOGOUT:\n\t\treturn {\n\t\t\t...state, token: null\n\t\t}\n\t\tdefault:\n\t\t return state\n\t}\n}","import {combineReducers} from 'redux'\nimport quizReducer from './quiz'\nimport createReducer from './create'\nimport authReducer from './auth'\n\nexport default combineReducers({\n\tquiz: quizReducer,\n\tcreate: createReducer,\n\tauth: authReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(\n\trootReducer,\n\tcomposeEnhancers(\n\t\tapplyMiddleware(thunk)\n\t)\n)\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}